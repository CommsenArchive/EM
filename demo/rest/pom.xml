<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.commsen.em.demo</groupId>
	<artifactId>em.demo.rest</artifactId>
	<version>0.1.0-SNAPSHOT</version>

	<properties>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

	</properties>

	<profiles>
		<profile>
			<!-- 
				Use `mvn clean install` to build an executable jar to from this service.  
			 -->
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- 
					This will build `<artifactId>.jar` executable jar in project's `target` folder!
				 -->
				<_.eccentric.modularity.executable />
<!--  				<_.eccentric.modularity.cfg.requirements>
					osgi.identity;filter:='(osgi.identity=org.apache.felix.gogo.runtime)',
					osgi.identity;filter:='(osgi.identity=org.apache.felix.gogo.jline)',
					osgi.identity;filter:='(osgi.identity=org.apache.felix.gogo.command)'
				</_.eccentric.modularity.cfg.requirements>
 -->			</properties>
		</profile>
		<profile>
			<!-- 
				Use `mvn clean install -P liferay` to get the artifacts you need to deploy to Liferay to run this service.  
			 -->
			<id>liferay</id>
			<properties>
				<!-- 
					This will prepare the artifacts to be deployed in `<target>/export/<ArtifactId>` folder!
					Other Maven plugin's can get that path from `${_.eccentric.modularity.resolve.output}` property! 
				 -->
				<_.eccentric.modularity.deploy />
				<!-- 
					The format of the target runtime is <host>:<port>:<name>:<version>.
					It will generate `.distros/<name>-<version>.jar` containing metadata about the runtime at <host>:<port> 
					which will be used by the resolver to determine which artifacts are needed.

					
					KNOWN ISSUES / LIMITATIONS:
					 - the target runtime need to be a OSGi runtime where remote agent 
					   (https://mvnrepository.com/artifact/biz.aQute.bnd/biz.aQute.remote.agent) is installed
				 -->
				<_.eccentric.modularity.deploy.target>localhost:29998:liferay:7.0.0</_.eccentric.modularity.deploy.target>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Basic framework libraries -->
				<groupId>com.commsen.em</groupId>
				<artifactId>em.bom.framework</artifactId>
				<version>0.1.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<!-- libraries needed to run REST services -->
				<groupId>com.commsen.em</groupId>
				<artifactId>em.bom.rest</artifactId>
				<version>0.1.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<!-- libraries needed to run shell -->
				<groupId>com.commsen.em</groupId>
				<artifactId>em.bom.shell</artifactId>
				<version>0.1.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<!-- libraries needed for logging -->
				<groupId>com.commsen.em</groupId>
				<artifactId>em.bom.logging</artifactId>
				<version>0.1.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<!-- calculator implementations -->
				<groupId>com.commsen.em.demo</groupId>
				<artifactId>em.demo.calc-bom</artifactId>
				<version>0.1.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- 
			Actual project dependencies 
		-->

		<dependency>
			<groupId>com.commsen.em.demo</groupId>
			<artifactId>em.demo.calc-api</artifactId>
			<version>0.1.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.commsen.em</groupId>
			<artifactId>em.annotations</artifactId>
			<version>0.1.0-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0.1</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>com.commsen.em</groupId>
				<artifactId>em-maven-extension</artifactId>
				<version>0.1.0-SNAPSHOT</version>
			</extension>
		</extensions>
	</build>
</project>